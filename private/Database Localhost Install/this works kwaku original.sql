-- MySQL Script generated by MySQL Workbench
-- Wed Dec  6 01:58:14 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Event_movies
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Event_movies
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Event_movies` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema event_movies
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema event_movies
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `event_movies` DEFAULT CHARACTER SET utf8 ;
USE `Event_movies` ;

-- -----------------------------------------------------
-- Table `Event_movies`.`Country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Event_movies`.`Country` (
  `Country_ID` INT NOT NULL AUTO_INCREMENT,
  `Country_Name` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`Country_ID`),
  UNIQUE INDEX `Country Name_UNIQUE` (`Country_Name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Event_movies`.`City`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Event_movies`.`City` (
  `City_ID` INT NOT NULL AUTO_INCREMENT,
  `City_Name` VARCHAR(100) NOT NULL,
  `Country_ID` INT NOT NULL,
  PRIMARY KEY (`City_ID`),
  INDEX `fk_City_Country1_idx` (`Country_ID` ASC),
  CONSTRAINT `fk_City_Country1`
    FOREIGN KEY (`Country_ID`)
    REFERENCES `Event_movies`.`Country` (`Country_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Event_movies`.`Address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Event_movies`.`Address` (
  `Address_ID` INT NOT NULL AUTO_INCREMENT,
  `Post_Code` VARCHAR(45) NOT NULL,
  `Country_ID` INT NOT NULL,
  `City_ID` INT NOT NULL,
  INDEX `fk_Address_City1_idx` (`City_ID` ASC),
  PRIMARY KEY (`Address_ID`),
  CONSTRAINT `fk_Address_City1`
    FOREIGN KEY (`City_ID`)
    REFERENCES `Event_movies`.`City` (`City_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Event_movies`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Event_movies`.`User` (
  `User_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Password` VARCHAR(100) NOT NULL,
  `First_name` VARCHAR(65) NOT NULL,
  `Last_name` VARCHAR(100) NOT NULL,
  `Age` INT UNSIGNED NOT NULL,
  `Username` VARCHAR(60) NOT NULL,
  `Address_ID` INT NOT NULL,
  PRIMARY KEY (`User_ID`),
  UNIQUE INDEX `Username_UNIQUE` (`Username` ASC),
  INDEX `fk_User_Address1_idx` (`Address_ID` ASC),
  UNIQUE INDEX `User_ID_UNIQUE` (`User_ID` ASC),
  CONSTRAINT `fk_User_Address1`
    FOREIGN KEY (`Address_ID`)
    REFERENCES `Event_movies`.`Address` (`Address_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Event_movies`.`Room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Event_movies`.`Room` (
  `Room_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Capacity` INT NOT NULL,
  `Room_name` VARCHAR(50) NOT NULL,
  `Wheelchair_Accessible` VARCHAR(3) NOT NULL,
  `Address_ID` INT NOT NULL,
  PRIMARY KEY (`Room_ID`),
  UNIQUE INDEX `Room name_UNIQUE` (`Room_name` ASC),
  INDEX `fk_Room_Address1_idx` (`Address_ID` ASC),
  UNIQUE INDEX `Room_ID_UNIQUE` (`Room_ID` ASC),
  CONSTRAINT `fk_Room_Address1`
    FOREIGN KEY (`Address_ID`)
    REFERENCES `Event_movies`.`Address` (`Address_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '	';


-- -----------------------------------------------------
-- Table `Event_movies`.`Event Category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Event_movies`.`Event Category` (
  `Event_Category ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Category_Name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`Event_Category ID`),
  UNIQUE INDEX `Category Name_UNIQUE` (`Category_Name` ASC),
  UNIQUE INDEX `Event_Category ID_UNIQUE` (`Event_Category ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Event_movies`.`Event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Event_movies`.`Event` (
  `Event_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Event_name` VARCHAR(150) NOT NULL,
  `host_User(User ID)` INT UNSIGNED NOT NULL,
  `Event_end_dateTime` DATETIME NOT NULL,
  `Event_Description` TEXT NOT NULL,
  `Total_Tickets` INT UNSIGNED NOT NULL,
  `Room_ID` INT UNSIGNED NOT NULL,
  `Event Category_ID` INT UNSIGNED NOT NULL,
  `Event_start_Datetime` DATETIME NOT NULL,
  `Ticker_sale_end_dateTime` DATETIME NOT NULL,
  PRIMARY KEY (`Event_ID`),
  INDEX `fk_Event_Room1_idx` (`Room_ID` ASC),
  INDEX `fk_Event_User1_idx` (`host_User(User ID)` ASC),
  INDEX `fk_Event_Event Category1_idx` (`Event Category_ID` ASC),
  UNIQUE INDEX `Event_ID_UNIQUE` (`Event_ID` ASC),
  UNIQUE INDEX `Room_ID_UNIQUE` (`Room_ID` ASC),
  UNIQUE INDEX `Event Category_ID_UNIQUE` (`Event Category_ID` ASC),
  UNIQUE INDEX `host_User(User ID)_UNIQUE` (`host_User(User ID)` ASC),
  CONSTRAINT `fk_Event_Room1`
    FOREIGN KEY (`Room_ID`)
    REFERENCES `Event_movies`.`Room` (`Room_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Event_User1`
    FOREIGN KEY (`host_User(User ID)`)
    REFERENCES `Event_movies`.`User` (`User_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Event_Event Category1`
    FOREIGN KEY (`Event Category_ID`)
    REFERENCES `Event_movies`.`Event Category` (`Event_Category ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Event_movies`.`Rating`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Event_movies`.`Rating` (
  `Rating_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Event_Rating` FLOAT NULL,
  `Host_rating` FLOAT NULL,
  `Review_text` TEXT NULL,
  `Event_ ID` INT UNSIGNED NOT NULL,
  `User_ ID(rater)` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`Rating_ID`),
  INDEX `fk_Rating_Event1_idx` (`Event_ ID` ASC),
  INDEX `fk_Rating_User1_idx` (`User_ ID(rater)` ASC),
  UNIQUE INDEX `Rating_ID_UNIQUE` (`Rating_ID` ASC),
  UNIQUE INDEX `User_ ID(rater)_UNIQUE` (`User_ ID(rater)` ASC),
  UNIQUE INDEX `Event_ ID_UNIQUE` (`Event_ ID` ASC),
  CONSTRAINT `fk_Rating_Event1`
    FOREIGN KEY (`Event_ ID`)
    REFERENCES `Event_movies`.`Event` (`Event_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Rating_User1`
    FOREIGN KEY (`User_ ID(rater)`)
    REFERENCES `Event_movies`.`User` (`User_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Event_movies`.`Booking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Event_movies`.`Booking` (
  `Number_of_tickets` INT UNSIGNED NOT NULL,
  `User_ID` INT UNSIGNED NOT NULL,
  `Event_ID` INT UNSIGNED NOT NULL,
  UNIQUE INDEX `Event_ID_UNIQUE` (`Event_ID` ASC),
  UNIQUE INDEX `User_ID_UNIQUE` (`User_ID` ASC),
  CONSTRAINT `fk_Booking_User1`
    FOREIGN KEY (`User_ID`)
    REFERENCES `Event_movies`.`User` (`User_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Booking_Event1`
    FOREIGN KEY (`Event_ID`)
    REFERENCES `Event_movies`.`Event` (`Event_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Event_movies`.`Film`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Event_movies`.`Film` (
  `Film_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(200) NOT NULL,
  `Film_Tagline` VARCHAR(60) NULL,
  `Age_restriction` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`Film_ID`),
  UNIQUE INDEX `Film_ID_UNIQUE` (`Film_ID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Event_movies`.`Film Genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Event_movies`.`Film Genre` (
  `Genre_ID` INT NOT NULL,
  `Genre_Name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`Genre_ID`),
  UNIQUE INDEX `Genre Nane_UNIQUE` (`Genre_Name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Event_movies`.`Award`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Event_movies`.`Award` (
  `Award_ID` INT NOT NULL AUTO_INCREMENT,
  `Award_Name` VARCHAR(100) NOT NULL,
  `Award_Year` YEAR NOT NULL,
  `Film_ID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`Award_ID`),
  UNIQUE INDEX `Award Name_UNIQUE` (`Award_Name` ASC),
  INDEX `fk_Award_Film1_idx` (`Film_ID` ASC),
  UNIQUE INDEX `Film_ID_UNIQUE` (`Film_ID` ASC),
  CONSTRAINT `fk_Award_Film1`
    FOREIGN KEY (`Film_ID`)
    REFERENCES `Event_movies`.`Film` (`Film_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Event_movies`.`Film_Film Genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Event_movies`.`Film_Film Genre` (
  `Film_ID` INT UNSIGNED NOT NULL,
  `Genre_ID` INT NOT NULL,
  INDEX `fk_Film_has_Film Genre_Film Genre1_idx` (`Genre_ID` ASC),
  INDEX `fk_Film_has_Film Genre_Film1_idx` (`Film_ID` ASC),
  UNIQUE INDEX `Film_ID_UNIQUE` (`Film_ID` ASC),
  PRIMARY KEY (`Film_ID`, `Genre_ID`),
  UNIQUE INDEX `Genre_ID_UNIQUE` (`Genre_ID` ASC),
  CONSTRAINT `fk_Film_has_Film Genre_Film1`
    FOREIGN KEY (`Film_ID`)
    REFERENCES `Event_movies`.`Film` (`Film_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Film_has_Film Genre_Film Genre1`
    FOREIGN KEY (`Genre_ID`)
    REFERENCES `Event_movies`.`Film Genre` (`Genre_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Event_movies`.`Film_Event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Event_movies`.`Film_Event` (
  `Film_ID` INT UNSIGNED NOT NULL,
  `Event_ID` INT UNSIGNED NOT NULL,
  INDEX `fk_Film_has_Event_Event1_idx` (`Event_ID` ASC),
  INDEX `fk_Film_has_Event_Film1_idx` (`Film_ID` ASC),
  UNIQUE INDEX `Film ID_UNIQUE` (`Film_ID` ASC),
  PRIMARY KEY (`Film_ID`, `Event_ID`),
  CONSTRAINT `fk_Film_has_Event_Film1`
    FOREIGN KEY (`Film_ID`)
    REFERENCES `Event_movies`.`Film` (`Film_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Film_has_Event_Event1`
    FOREIGN KEY (`Event_ID`)
    REFERENCES `Event_movies`.`Event` (`Event_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `event_movies` ;

-- -----------------------------------------------------
-- Table `event_movies`.`country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `event_movies`.`country` (
  `Country_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `Country_Name` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`Country_ID`),
  UNIQUE INDEX `Country Name_UNIQUE` (`Country_Name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `event_movies`.`city`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `event_movies`.`city` (
  `City_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `City_Name` VARCHAR(100) NOT NULL,
  `Country_ID` INT(11) NOT NULL,
  PRIMARY KEY (`City_ID`, `Country_ID`),
  INDEX `fk_City_Country1_idx` (`Country_ID` ASC),
  CONSTRAINT `fk_City_Country1`
    FOREIGN KEY (`Country_ID`)
    REFERENCES `event_movies`.`country` (`Country_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `event_movies`.`address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `event_movies`.`address` (
  `Address_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `Post_Code` VARCHAR(45) NOT NULL,
  `Country_ID` INT(11) NOT NULL,
  `City_ID` INT(11) NOT NULL,
  PRIMARY KEY (`Address_ID`),
  INDEX `fk_Address_City1_idx` (`City_ID` ASC),
  CONSTRAINT `fk_Address_City1`
    FOREIGN KEY (`City_ID`)
    REFERENCES `event_movies`.`city` (`City_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `event_movies`.`event category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `event_movies`.`event category` (
  `Event_Category ID` INT(11) NOT NULL AUTO_INCREMENT,
  `Category_Name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`Event_Category ID`),
  UNIQUE INDEX `Category Name_UNIQUE` (`Category_Name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `event_movies`.`room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `event_movies`.`room` (
  `Room_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `Capacity` INT(11) NOT NULL,
  `Room_name` VARCHAR(50) NOT NULL,
  `Wheelchair_Accessible` VARCHAR(3) NOT NULL,
  `Address_ID` INT(11) NOT NULL,
  PRIMARY KEY (`Room_ID`),
  UNIQUE INDEX `Room name_UNIQUE` (`Room_name` ASC),
  INDEX `fk_Room_Address1_idx` (`Address_ID` ASC),
  CONSTRAINT `fk_Room_Address1`
    FOREIGN KEY (`Address_ID`)
    REFERENCES `event_movies`.`address` (`Address_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '	';


-- -----------------------------------------------------
-- Table `event_movies`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `event_movies`.`user` (
  `User_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `Password` VARCHAR(100) NOT NULL,
  `First_name` VARCHAR(65) NOT NULL,
  `Last_name` VARCHAR(100) NOT NULL,
  `Age` INT(10) UNSIGNED NOT NULL,
  `Username` VARCHAR(60) NOT NULL,
  `Address_ID` INT(11) NOT NULL,
  PRIMARY KEY (`User_ID`),
  UNIQUE INDEX `Username_UNIQUE` (`Username` ASC),
  INDEX `fk_User_Address1_idx` (`Address_ID` ASC),
  CONSTRAINT `fk_User_Address1`
    FOREIGN KEY (`Address_ID`)
    REFERENCES `event_movies`.`address` (`Address_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
