

-- GRANT ALL PRIVILEGES ON MovieTime.* TO 'webuser'@'localhost' IDENTIFIED BY 'secretpassword';

-- MySQL Script generated by MySQL Workbench
-- Wed Dec  6 02:12:56 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';


-- -----------------------------------------------------
-- Schema movietime
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `movietime` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_mysql500_ci ;
USE `movietime` ;
GRANT ALL PRIVILEGES ON MovieTime.* TO 'webuser'@'localhost' IDENTIFIED BY 'secretpassword';

-- -----------------------------------------------------
-- Table `movietime`.`country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movietime`.`country` (
  `country_id` INT NOT NULL AUTO_INCREMENT,
  `country_name` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`country_id`),
  UNIQUE INDEX `Country Name_UNIQUE` (`country_name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movietime`.`city`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movietime`.`city` (
  `city_id` INT NOT NULL AUTO_INCREMENT,
  `city_name` VARCHAR(100) NOT NULL,
  `country_id` INT NOT NULL,
  PRIMARY KEY (`city_id`),
  INDEX `fk_City_Country1_idx` (`country_id` ASC),
  CONSTRAINT `fk_City_Country1`
    FOREIGN KEY (`country_id`)
    REFERENCES `movietime`.`country` (`country_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movietime`.`address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movietime`.`address` (
  `address_id` INT NOT NULL AUTO_INCREMENT,
  `postcode` VARCHAR(45) NOT NULL,
  `country_id` INT NOT NULL,
  `city_id` INT NOT NULL,
  INDEX `fk_Address_City1_idx` (`city_id` ASC),
  PRIMARY KEY (`address_id`),
  CONSTRAINT `fk_Address_City1`
    FOREIGN KEY (`city_id`)
    REFERENCES `movietime`.`city` (`city_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movietime`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movietime`.`user` (
  `user_ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `password` VARCHAR(30) NOT NULL,
  `first_name` VARCHAR(65) NOT NULL,
  `last_name` VARCHAR(100) NOT NULL,
  `age` INT UNSIGNED NOT NULL,
  `username` VARCHAR(60) NOT NULL,
  `address_id` INT NOT NULL,
  PRIMARY KEY (`user_ID`),
  UNIQUE INDEX `Username_UNIQUE` (`username` ASC),
  INDEX `fk_user_address_idx` (`address_id` ASC),
  UNIQUE INDEX `User_ID_UNIQUE` (`user_ID` ASC),
  CONSTRAINT `fk_User_Address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `movietime`.`address` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movietime`.`room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movietime`.`room` (
  `room_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `capacity` INT NOT NULL,
  `room_name` VARCHAR(50) NOT NULL,
  `wheelchair_accessible` VARCHAR(3) NOT NULL,
  `address_id` INT NOT NULL,
  PRIMARY KEY (`room_id`),
  UNIQUE INDEX `Room name_UNIQUE` (`room_name` ASC),
  INDEX `fk_Room_Address1_idx` (`address_id` ASC),
  UNIQUE INDEX `Room_ID_UNIQUE` (`room_id` ASC),
  CONSTRAINT `fk_Room_Address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `movietime`.`address` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '	';


-- -----------------------------------------------------
-- Table `movietime`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movietime`.`category` (
  `category_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `category_name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`category_id`),
  UNIQUE INDEX `Category Name_UNIQUE` (`category_name` ASC),
  UNIQUE INDEX `Event_Category ID_UNIQUE` (`category_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movietime`.`event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movietime`.`event` (
  `event_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `event_name` VARCHAR(150) NOT NULL,
  `host_user_id` INT UNSIGNED NOT NULL,
  `event_end` DATETIME NOT NULL,
  `event_description` TEXT NOT NULL,
  `total_tickets` INT UNSIGNED NOT NULL,
  `room_id` INT UNSIGNED NOT NULL,
  `event_category_id` INT UNSIGNED NOT NULL,
  `event_start` DATETIME NOT NULL,
  `ticket_sale_end` DATETIME NOT NULL,
  PRIMARY KEY (`event_id`),
  INDEX `fk_Event_Room1_idx` (`room_id` ASC),
  INDEX `fk_Event_User1_idx` (`host_user_id` ASC),
  INDEX `fk_Event_Event Category1_idx` (`event_category_id` ASC),
  UNIQUE INDEX `Event_ID_UNIQUE` (`event_id` ASC),
  UNIQUE INDEX `Room_ID_UNIQUE` (`room_id` ASC),
  UNIQUE INDEX `Event Category_ID_UNIQUE` (`event_category_id` ASC),
  UNIQUE INDEX `host_User(User ID)_UNIQUE` (`host_user_id` ASC),
  CONSTRAINT `fk_Event_Room1`
    FOREIGN KEY (`room_id`)
    REFERENCES `movietime`.`room` (`room_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Event_User1`
    FOREIGN KEY (`host_user_id`)
    REFERENCES `movietime`.`user` (`user_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Event_Event Category1`
    FOREIGN KEY (`event_category_id`)
    REFERENCES `movietime`.`category` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movietime`.`rating`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movietime`.`rating` (
  `rating_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `event_rating` FLOAT NULL,
  `host_rating` FLOAT NULL,
  `review_text` TEXT NULL,
  `event_ ID` INT UNSIGNED NOT NULL,
  `user_ ID(rater)` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`rating_id`),
  INDEX `fk_Rating_Event1_idx` (`event_ ID` ASC),
  INDEX `fk_Rating_User1_idx` (`user_ ID(rater)` ASC),
  UNIQUE INDEX `Rating_ID_UNIQUE` (`rating_id` ASC),
  UNIQUE INDEX `User_ ID(rater)_UNIQUE` (`user_ ID(rater)` ASC),
  UNIQUE INDEX `Event_ ID_UNIQUE` (`event_ ID` ASC),
  CONSTRAINT `fk_Rating_Event1`
    FOREIGN KEY (`event_ ID`)
    REFERENCES `movietime`.`event` (`event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Rating_User1`
    FOREIGN KEY (`user_ ID(rater)`)
    REFERENCES `movietime`.`user` (`user_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movietime`.`booking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movietime`.`booking` (
  `number_of_tickets` INT UNSIGNED NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `event_id` INT UNSIGNED NOT NULL,
  UNIQUE INDEX `Event_ID_UNIQUE` (`event_id` ASC),
  UNIQUE INDEX `User_ID_UNIQUE` (`user_id` ASC),
  CONSTRAINT `fk_Booking_User1`
    FOREIGN KEY (`user_id`)
    REFERENCES `movietime`.`user` (`user_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Booking_Event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `movietime`.`event` (`event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movietime`.`film`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movietime`.`film` (
  `film_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(200) NOT NULL,
  `tagline` VARCHAR(200) NULL,
  `certificate` VARCHAR(5) NOT NULL DEFAULT 0,
  PRIMARY KEY (`film_id`),
  UNIQUE INDEX `Film_ID_UNIQUE` (`film_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movietime`.`film_genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movietime`.`film_genre` (
  `genre_id` INT NOT NULL,
  `genre_name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`genre_id`),
  UNIQUE INDEX `Genre Nane_UNIQUE` (`genre_name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movietime`.`award`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movietime`.`award` (
  `award_id` INT NOT NULL AUTO_INCREMENT,
  `award_name` VARCHAR(100) NOT NULL,
  `award_year` YEAR NOT NULL,
  `film_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`award_id`),
  UNIQUE INDEX `Award Name_UNIQUE` (`award_name` ASC),
  INDEX `fk_Award_Film1_idx` (`film_id` ASC),
  UNIQUE INDEX `Film_ID_UNIQUE` (`film_id` ASC),
  CONSTRAINT `fk_Award_Film1`
    FOREIGN KEY (`film_id`)
    REFERENCES `movietime`.`film` (`film_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movietime`.`film_film_genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movietime`.`film_film_genre` (
  `film_id` INT UNSIGNED NOT NULL,
  `genre_id` INT NOT NULL,
  INDEX `fk_Film_has_Film Genre_Film Genre1_idx` (`genre_id` ASC),
  INDEX `fk_Film_has_Film Genre_Film1_idx` (`film_id` ASC),
  PRIMARY KEY (`film_id`, `genre_id`),
  CONSTRAINT `fk_Film_has_Film Genre_Film1`
    FOREIGN KEY (`film_id`)
    REFERENCES `movietime`.`film` (`film_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Film_has_Film Genre_Film Genre1`
    FOREIGN KEY (`genre_id`)
    REFERENCES `movietime`.`film_genre` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movietime`.`film_event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movietime`.`film_event` (
  `film_id` INT UNSIGNED NOT NULL,
  `event_id` INT UNSIGNED NOT NULL,
  INDEX `fk_Film_has_Event_Event1_idx` (`event_id` ASC),
  INDEX `fk_Film_has_Event_Film1_idx` (`film_id` ASC),
  PRIMARY KEY (`film_id`, `event_id`),
  CONSTRAINT `fk_Film_has_Event_Film1`
    FOREIGN KEY (`film_id`)
    REFERENCES `movietime`.`film` (`film_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Film_has_Event_Event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `movietime`.`event` (`event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
